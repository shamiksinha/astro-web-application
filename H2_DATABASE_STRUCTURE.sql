;             
CREATE USER IF NOT EXISTS ASTRO SALT '3f24a98a7c9cac5a' HASH '0e94f72bf15aed8a9fbfab8beaa4a3ae68ad04b1244d90becd1c8eedc795e641';              
CREATE USER IF NOT EXISTS SA SALT '03e6f7914dc1e474' HASH '0fe112035366b286959fb23e683427b6377d0fbf3a7ebbed159df355393470e8' ADMIN;           
CREATE SCHEMA IF NOT EXISTS ASTROLOGY AUTHORIZATION SA;       
CREATE SEQUENCE PUBLIC.PRODUCT_SEQ START WITH 1;              
CREATE SEQUENCE PUBLIC.HIBERNATE_SEQUENCE START WITH 421;     
CREATE SEQUENCE PUBLIC.BOOKING_SEQ START WITH 1;              
CREATE CACHED TABLE ASTROLOGY.PERSISTENT_LOGINS(
    USERNAME VARCHAR_IGNORECASE(100) NOT NULL,
    SERIES VARCHAR(64) NOT NULL,
    TOKEN VARCHAR(64) NOT NULL,
    LAST_USED TIMESTAMP NOT NULL
);     
ALTER TABLE ASTROLOGY.PERSISTENT_LOGINS ADD CONSTRAINT ASTROLOGY.CONSTRAINT_A PRIMARY KEY(SERIES);            
-- 0 +/- SELECT COUNT(*) FROM ASTROLOGY.PERSISTENT_LOGINS;    
CREATE CACHED TABLE ASTROLOGY.BOOKING(
    ID INTEGER NOT NULL,
    DATE_CREATED TIMESTAMP,
    LAST_UPDATED TIMESTAMP,
    VERSION INTEGER,
    ALL_DAY_EVENT BOOLEAN NOT NULL,
    BOOKING_DESC VARCHAR(255),
    COLOR VARCHAR(255),
    END_TIME TIMESTAMP,
    RECURRING BOOLEAN NOT NULL,
    START_TIME TIMESTAMP,
    BOOKING_TYPE_ID INTEGER,
    USERNAME INTEGER
);   
ALTER TABLE ASTROLOGY.BOOKING ADD CONSTRAINT ASTROLOGY.CONSTRAINT_2 PRIMARY KEY(ID);          
-- 0 +/- SELECT COUNT(*) FROM ASTROLOGY.BOOKING;              
CREATE CACHED TABLE ASTROLOGY.BOOKING_TYPE(
    ID INTEGER NOT NULL,
    DATE_CREATED TIMESTAMP,
    LAST_UPDATED TIMESTAMP,
    VERSION INTEGER,
    BOOKING_TYPE_DESC VARCHAR(255),
    BOOKING_TYPE_ID VARCHAR(255),
    BOOKING_TYPEDURATION INTEGER NOT NULL
);  
ALTER TABLE ASTROLOGY.BOOKING_TYPE ADD CONSTRAINT ASTROLOGY.CONSTRAINT_F PRIMARY KEY(ID);     
-- 0 +/- SELECT COUNT(*) FROM ASTROLOGY.BOOKING_TYPE;         
CREATE CACHED TABLE ASTROLOGY.PAYMENT_ORDER(
    ID INTEGER NOT NULL,
    DATE_CREATED TIMESTAMP,
    LAST_UPDATED TIMESTAMP,
    VERSION INTEGER,
    AMOUNT DOUBLE,
    CURRENCY_CODE VARCHAR(255) NOT NULL,
    DESCRIPTION VARCHAR(255),
    EMAIL VARCHAR(255),
    NAME VARCHAR(255),
    PAYMENT_ID VARCHAR(255),
    PAYMENT_STATUS VARCHAR(255),
    PHONE VARCHAR(255),
    TRANSACTION_ID VARCHAR(255) NOT NULL,
    UNIQUE_ID VARCHAR(255),
    USER_ID INTEGER
);
ALTER TABLE ASTROLOGY.PAYMENT_ORDER ADD CONSTRAINT ASTROLOGY.CONSTRAINT_5 PRIMARY KEY(ID);    
-- 0 +/- SELECT COUNT(*) FROM ASTROLOGY.PAYMENT_ORDER;        
CREATE CACHED TABLE ASTROLOGY.PRODUCT(
    ID INTEGER NOT NULL,
    DATE_CREATED TIMESTAMP,
    LAST_UPDATED TIMESTAMP,
    VERSION INTEGER,
    NO_OF_PRODUCTS VARCHAR(255),
    PRODUCT_ID VARCHAR(255),
    PRODUCT_NAME VARCHAR(255),
    USER_ID INTEGER
);     
ALTER TABLE ASTROLOGY.PRODUCT ADD CONSTRAINT ASTROLOGY.CONSTRAINT_1 PRIMARY KEY(ID);          
-- 0 +/- SELECT COUNT(*) FROM ASTROLOGY.PRODUCT;              
CREATE CACHED TABLE ASTROLOGY.USER(
    ID INTEGER NOT NULL,
    DATE_CREATED TIMESTAMP,
    LAST_UPDATED TIMESTAMP,
    VERSION INTEGER,
    EMAIL VARCHAR(255),
    FIRST_NAME VARCHAR(255),
    LAST_NAME VARCHAR(255),
    PASSWORD VARCHAR(255),
    PHONE VARCHAR(255) NOT NULL,
    ROLE VARCHAR(255),
    USERNAME VARCHAR(255)
);        
ALTER TABLE ASTROLOGY.USER ADD CONSTRAINT ASTROLOGY.CONSTRAINT_27 PRIMARY KEY(ID);            
-- 2 +/- SELECT COUNT(*) FROM ASTROLOGY.USER; 
INSERT INTO ASTROLOGY.USER(ID, DATE_CREATED, LAST_UPDATED, VERSION, EMAIL, FIRST_NAME, LAST_NAME, PASSWORD, PHONE, ROLE, USERNAME) VALUES
(419, TIMESTAMP '2019-04-13 01:43:22.498', TIMESTAMP '2019-04-13 01:43:22.498', 0, 'abc@cd.com', 'Shamik', 'Sinha', '{bcrypt}$2a$10$7nMMCDG71kgskT5UEvIgveyCPwfTZei/DTctKBfJBYXyCUIe9GL/6', '+919916099778', 'USER', 'abc@cd.com'),
(420, TIMESTAMP '2019-04-13 01:43:22.752', TIMESTAMP '2019-04-13 01:43:22.752', 0, 'abc@cde.com', 'Shamik1', 'Sinha1', '{bcrypt}$2a$10$VCPQASFTKvYaZBqUHlTZK.V2zemf8ciGAdCzG4RTkMQI2zYi4sXji', '+919916099778', 'USER', 'abc@cde.com');       
ALTER TABLE ASTROLOGY.PAYMENT_ORDER ADD CONSTRAINT ASTROLOGY.UK_HIBLFJL8K8PYRVNNC5U9AVYW7 UNIQUE(TRANSACTION_ID);             
ALTER TABLE ASTROLOGY.PAYMENT_ORDER ADD CONSTRAINT ASTROLOGY.FKDKJ084GG4AK2UY5183LO7QU3Q FOREIGN KEY(USER_ID) REFERENCES ASTROLOGY.USER(ID) NOCHECK;          
ALTER TABLE ASTROLOGY.BOOKING ADD CONSTRAINT ASTROLOGY.FK51VOS7PWHSVOYT2JD6S783C0E FOREIGN KEY(BOOKING_TYPE_ID) REFERENCES ASTROLOGY.BOOKING_TYPE(ID) NOCHECK;
ALTER TABLE ASTROLOGY.BOOKING ADD CONSTRAINT ASTROLOGY.FKRJOB56YAL18KK1MVWJ2D2ELKI FOREIGN KEY(USERNAME) REFERENCES ASTROLOGY.USER(ID) NOCHECK;               
ALTER TABLE ASTROLOGY.PRODUCT ADD CONSTRAINT ASTROLOGY.FK979LIW4XK18NCPL87U4TYGX2U FOREIGN KEY(USER_ID) REFERENCES ASTROLOGY.USER(ID) NOCHECK;
GRANT ALL ON SCHEMA ASTROLOGY TO ASTRO;       
